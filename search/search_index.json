{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Your grandparents' distribution Papy Linux (/papi linyks/, from the french \"papy\" which means \"grandfather\") is a distribution I made for my grandfather so that he can use his computer easily and without unexpected behaviours. It's a web-only distribution, Firefox is started at boot, can't be closed and you can't open any other application.","title":"Home"},{"location":"#home","text":"Your grandparents' distribution Papy Linux (/papi linyks/, from the french \"papy\" which means \"grandfather\") is a distribution I made for my grandfather so that he can use his computer easily and without unexpected behaviours. It's a web-only distribution, Firefox is started at boot, can't be closed and you can't open any other application.","title":"Home"},{"location":"contributing/","text":"Contributing This distribution is open-source and every contribution is welcome. Though, it shouldn't be against the distro's philosophy. Note I'll always privilege my personnal usage of the distro, as I created it for my usage at the beginning. That means that if you make a contribution which is pertinent but which I don't want to have on my computers, I may refuse it. In such cases, don't hesitate to fork it! Components There are 3 components you can contribute to : Component Path The live live The installer live/airootfs/opt/install/ The distro live/airootfs/opt/install/rootfs/ Tip: the \"dotfiles\" are in live/airootfs/opt/install/rootfs/etc/skel/ The live live/ The live is based on the baseline profile of archiso . Building Arch: If you are on Arch, or any other linux distribution which has archiso (are there?), and have archiso installed, you can build the live by cd-ing in live and running mkarchiso -v . . The resulting ISO will be in live/out/ . Other: If you are on any other operating system (I must confess I'm using Windows 10), you must install Vagrant and VirtualBox and run vagrant up . If you already did vagrant up , modified files and want to build it again, you have to do vagrant provision . You'll find the ISO in vagrant_out/ . The installer live/airootfs/opt/install/ Okay, let's talk about the installer... That's not the cleanest thing I made ever. It's just a simple bash script that does all you do when installing Arch manually with the installation guide. At some time I wanted to use Calamares but searching on Internet there is very very few documentation about it, so it was even simpler to do everything from zero. And it made me learn a lot actually. The installer doesn't support UEFI yet, as the computer I want to install the distro on still uses BIOS. This will be fixed soon. It manages partitonning, locale setup, base system and packages installation. Note: you can see polybar binary is included directly in the repository. It's because compiling it from the AUR made the installation nearly twice longer. The distribution live/airootfs/opt/install/rootfs/ The distribution's folder contains all the files that will be copied on the final system, for example i3 or polybar configuration files. PS: Files resulting in /home/user/ are in rootfs/etc/skel/ ;)","title":"Contributing"},{"location":"contributing/#contributing","text":"This distribution is open-source and every contribution is welcome. Though, it shouldn't be against the distro's philosophy. Note I'll always privilege my personnal usage of the distro, as I created it for my usage at the beginning. That means that if you make a contribution which is pertinent but which I don't want to have on my computers, I may refuse it. In such cases, don't hesitate to fork it!","title":"Contributing"},{"location":"contributing/#components","text":"There are 3 components you can contribute to : Component Path The live live The installer live/airootfs/opt/install/ The distro live/airootfs/opt/install/rootfs/ Tip: the \"dotfiles\" are in live/airootfs/opt/install/rootfs/etc/skel/","title":"Components"},{"location":"contributing/#the-live","text":"live/ The live is based on the baseline profile of archiso . Building Arch: If you are on Arch, or any other linux distribution which has archiso (are there?), and have archiso installed, you can build the live by cd-ing in live and running mkarchiso -v . . The resulting ISO will be in live/out/ . Other: If you are on any other operating system (I must confess I'm using Windows 10), you must install Vagrant and VirtualBox and run vagrant up . If you already did vagrant up , modified files and want to build it again, you have to do vagrant provision . You'll find the ISO in vagrant_out/ .","title":"The live"},{"location":"contributing/#the-installer","text":"live/airootfs/opt/install/ Okay, let's talk about the installer... That's not the cleanest thing I made ever. It's just a simple bash script that does all you do when installing Arch manually with the installation guide. At some time I wanted to use Calamares but searching on Internet there is very very few documentation about it, so it was even simpler to do everything from zero. And it made me learn a lot actually. The installer doesn't support UEFI yet, as the computer I want to install the distro on still uses BIOS. This will be fixed soon. It manages partitonning, locale setup, base system and packages installation. Note: you can see polybar binary is included directly in the repository. It's because compiling it from the AUR made the installation nearly twice longer.","title":"The installer"},{"location":"contributing/#the-distribution","text":"live/airootfs/opt/install/rootfs/ The distribution's folder contains all the files that will be copied on the final system, for example i3 or polybar configuration files. PS: Files resulting in /home/user/ are in rootfs/etc/skel/ ;)","title":"The distribution"},{"location":"installation/","text":"Installation The installation script will erase all data on your disk. Also, this is still under heavy developement and is very likely to break things on your computer To install it, grab the latest iso , boot it, and type setup . Note: when the system will be installed, you may need at some point to open a terminal for debugging, you can do so using Win+Shift+T","title":"Installation"},{"location":"installation/#installation","text":"The installation script will erase all data on your disk. Also, this is still under heavy developement and is very likely to break things on your computer To install it, grab the latest iso , boot it, and type setup . Note: when the system will be installed, you may need at some point to open a terminal for debugging, you can do so using Win+Shift+T","title":"Installation"},{"location":"rustdesk/","text":"RustDesk RustDesk is a powerful yet lightweight alternative to AnyDesk, or Teamviewer. It is, it allows you to remotely control a computer to help your grandparent which is stuck on a popup or because Firefox crashed. Installation You can just install it by using # pacman -S rustdesk It should enable the service automatically so that the server runs at start. Running rustdesk will give you the ID and the password of the machine. Note it somewhere, install the client on your personnal computer and you'll be good to go.","title":"RustDesk"},{"location":"rustdesk/#rustdesk","text":"RustDesk is a powerful yet lightweight alternative to AnyDesk, or Teamviewer. It is, it allows you to remotely control a computer to help your grandparent which is stuck on a popup or because Firefox crashed.","title":"RustDesk"},{"location":"rustdesk/#installation","text":"You can just install it by using # pacman -S rustdesk It should enable the service automatically so that the server runs at start. Running rustdesk will give you the ID and the password of the machine. Note it somewhere, install the client on your personnal computer and you'll be good to go.","title":"Installation"}]}